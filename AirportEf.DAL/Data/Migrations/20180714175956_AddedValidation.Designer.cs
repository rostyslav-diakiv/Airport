// <auto-generated />
using System;
using AirportEf.DAL.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AirportEf.DAL.Data.Migrations
{
    [DbContext(typeof(AirportDbContext))]
    [Migration("20180714175956_AddedValidation")]
    partial class AddedValidation
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.0-rtm-30799")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AirportEf.DAL.Entities.Crew", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("PilotId");

                    b.HasKey("Id");

                    b.HasIndex("PilotId");

                    b.ToTable("Crews");
                });

            modelBuilder.Entity("AirportEf.DAL.Entities.CrewStewardess", b =>
                {
                    b.Property<int>("CrewId");

                    b.Property<int>("StewardessId");

                    b.HasKey("CrewId", "StewardessId");

                    b.HasIndex("StewardessId");

                    b.ToTable("CrewStewardess");
                });

            modelBuilder.Entity("AirportEf.DAL.Entities.Departure", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CrewId");

                    b.Property<DateTime>("DepartureTime");

                    b.Property<string>("FlightId")
                        .HasColumnName("FlightNumber")
                        .HasMaxLength(10);

                    b.Property<int?>("PlaneId");

                    b.HasKey("Id");

                    b.HasIndex("CrewId");

                    b.HasIndex("FlightId");

                    b.HasIndex("PlaneId");

                    b.ToTable("Departures");
                });

            modelBuilder.Entity("AirportEf.DAL.Entities.Flight", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnName("Number")
                        .HasMaxLength(10);

                    b.Property<string>("DeparturePoint")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<DateTime>("DepartureTime");

                    b.Property<string>("Destination")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<DateTime>("DestinationArrivalTime");

                    b.HasKey("Id");

                    b.ToTable("Flights");
                });

            modelBuilder.Entity("AirportEf.DAL.Entities.Pilot", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateOfBirth");

                    b.Property<long>("ExperienceTicks");

                    b.Property<string>("FamilyName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Pilots");
                });

            modelBuilder.Entity("AirportEf.DAL.Entities.Plane", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationDate");

                    b.Property<long>("LifeTimeTicks");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int?>("PlaneTypeId");

                    b.HasKey("Id");

                    b.HasIndex("PlaneTypeId");

                    b.ToTable("Planes");
                });

            modelBuilder.Entity("AirportEf.DAL.Entities.PlaneType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("MaxCarryingCapacityKg");

                    b.Property<int>("MaxNumberOfPlaces");

                    b.Property<string>("PlaneModel")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("PlaneTypes");
                });

            modelBuilder.Entity("AirportEf.DAL.Entities.Stewardess", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateOfBirth");

                    b.Property<string>("FamilyName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Stewardesses");
                });

            modelBuilder.Entity("AirportEf.DAL.Entities.Ticket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FlightId")
                        .HasColumnName("FlightNumber")
                        .HasMaxLength(10);

                    b.Property<decimal>("Price");

                    b.HasKey("Id");

                    b.HasIndex("FlightId");

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("AirportEf.DAL.Entities.Crew", b =>
                {
                    b.HasOne("AirportEf.DAL.Entities.Pilot", "Pilot")
                        .WithMany("Crews")
                        .HasForeignKey("PilotId")
                        .OnDelete(DeleteBehavior.SetNull);
                });

            modelBuilder.Entity("AirportEf.DAL.Entities.CrewStewardess", b =>
                {
                    b.HasOne("AirportEf.DAL.Entities.Crew", "Crew")
                        .WithMany("CrewStewardess")
                        .HasForeignKey("CrewId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("AirportEf.DAL.Entities.Stewardess", "Stewardess")
                        .WithMany("CrewStewardess")
                        .HasForeignKey("StewardessId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AirportEf.DAL.Entities.Departure", b =>
                {
                    b.HasOne("AirportEf.DAL.Entities.Crew", "Crew")
                        .WithMany("Departures")
                        .HasForeignKey("CrewId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("AirportEf.DAL.Entities.Flight", "Flight")
                        .WithMany("Departures")
                        .HasForeignKey("FlightId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("AirportEf.DAL.Entities.Plane", "Plane")
                        .WithMany("Departures")
                        .HasForeignKey("PlaneId")
                        .OnDelete(DeleteBehavior.SetNull);
                });

            modelBuilder.Entity("AirportEf.DAL.Entities.Plane", b =>
                {
                    b.HasOne("AirportEf.DAL.Entities.PlaneType", "PlaneType")
                        .WithMany("Planes")
                        .HasForeignKey("PlaneTypeId")
                        .OnDelete(DeleteBehavior.SetNull);
                });

            modelBuilder.Entity("AirportEf.DAL.Entities.Ticket", b =>
                {
                    b.HasOne("AirportEf.DAL.Entities.Flight", "Flight")
                        .WithMany("Tickets")
                        .HasForeignKey("FlightId")
                        .OnDelete(DeleteBehavior.SetNull);
                });
#pragma warning restore 612, 618
        }
    }
}
